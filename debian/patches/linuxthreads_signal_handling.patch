
Temporary support for LinuxThreads signal handling on GNU/kFreeBSD (see #669043)

--- a/gdb/common/signals.c
+++ b/gdb/common/signals.c
@@ -334,6 +334,15 @@
     return TARGET_SIGNAL_INFO;
 #endif
 
+#if defined(__GLIBC__) && defined(__FreeBSD_kernel__)
+  if (hostsig == 32)
+    return TARGET_SIGNAL_LINUXTHREADS_RESTART;
+  if (hostsig == 33)
+    return TARGET_SIGNAL_LINUXTHREADS_CANCEL;
+  if (hostsig == 34)
+    return TARGET_SIGNAL_LINUXTHREADS_DEBUG;
+#endif
+
 #if defined (REALTIME_LO)
   if (hostsig >= REALTIME_LO && hostsig < REALTIME_HI)
     {
--- a/include/gdb/signals.def
+++ b/include/gdb/signals.def
@@ -194,7 +194,11 @@
 SET (TARGET_EXC_SOFTWARE, 149, "EXC_SOFTWARE", "Software generated exception")
 SET (TARGET_EXC_BREAKPOINT, 150, "EXC_BREAKPOINT", "Breakpoint")
 
+SET (TARGET_SIGNAL_LINUXTHREADS_RESTART, 151, "32", "LinuxThreads restart signal")
+SET (TARGET_SIGNAL_LINUXTHREADS_CANCEL, 152, "33", "LinuxThreads cancel signal")
+SET (TARGET_SIGNAL_LINUXTHREADS_DEBUG, 153, "34", "LinuxThreads debug signal")
+
 /* If you are adding a new signal, add it just above this comment.  */
 
 /* Last and unused enum value, for sizing arrays, etc.  */
-SET (TARGET_SIGNAL_LAST, 151, NULL, "TARGET_SIGNAL_MAGIC")
+SET (TARGET_SIGNAL_LAST, 154, NULL, "TARGET_SIGNAL_MAGIC")
